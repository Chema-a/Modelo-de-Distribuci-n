pageWithSidebar(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', vars),
selectInput('ycol', 'Y Variable', vars, selected = vars[[2]]),
numericInput('clusters', 'Cluster count', 3, min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
source('~/.active-rstudio-document')
pageWithSidebar(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', vars),
selectInput('ycol', 'Y Variable', vars, selected = vars[[2]]),
numericInput('clusters', 'Cluster count', 3, min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
install.packages('shiny')
pageWithSidebar(
headerPanel('Iris k-means clustering'),
sidebarPanel(
selectInput('xcol', 'X Variable', vars),
selectInput('ycol', 'Y Variable', vars, selected = vars[[2]]),
numericInput('clusters', 'Cluster count', 3, min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
install.packages('shiny')
runExample("Example")
runExample("01_hello")
library(shiny); source('Run.R')
source('Run.R')
source('Run.R')
source('Run.R')
source('Run.R')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp()
runApp('Server/Species')
runApp()
runApp('Server/Species')
shiny::runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
View(wrld_simpl)
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp()
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp()
runApp('Server/Species')
runApp()
runApp('Server/Species')
View(your_species_data)
runApp('Server/Species')
View(your_species_data)
runApp('Server/Species')
View(your_species_data)
View(your_species_data)
View(your_species_data)
runApp()
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
install.packages('dismo')
install.packages('rgbif')
install.packages('maptools')
install.packages('rJava')
install.packages("dismo")
library(dismo)
library(rgbif)
library(maptools)
library(rJava)
your_species_data <- occ_search(scientificName = "Canis latrans",
country = 'MX', fields=c('name','country','countryCode','stateProvince','year','decimalLatitude','decimalLongitude'), limit = 500, return ='data') #Limite de informacion
data("wrld_simpl")
xlim <- c(-129,-79) # this tells us to focus on mexico only
ylim <- c(15,35) # this tells us to focus on mexico only
plot(wrld_simpl,xlim=xlim,ylim=ylim) # make a zoomed-in map of mexico
points(your_species_data$data$decimalLongitude,your_species_data$data$decimalLatitude, col='purple')
path <- file.path(system.file(package="dismo"), 'ex') # This line of code tells R where we stored out climate data.
files <- list.files(path, pattern='grd$', full.names=TRUE )
files # here we see that R found many files related to global climate on the computer.
predictors <- stack(files)
predictors
extent_of_mexico_map <- extent(-129, -79, -15, 35) # Set your extent to the area we're focused on
predictors_cropped_to_mexico <- crop(predictors, extent_of_mexico_map)
plot(predictors_cropped_to_mexico)
set.seed(0)
group <- kfold(your_species_data$data, 5)
#Creation of data sets to train
pres_train_your_species <- your_species_data$data[group != 1, ]
pres_train_your_species <- as.data.frame(pres_train_your_species[,1:2])
pres_test_your_species <- your_species_data$data[group == 1, ]
pres_test_your_species <- as.data.frame(pres_test_your_species[,1:2])
pred_nf <- dropLayer(predictors_cropped_to_mexico, 'biome')
backg <- randomPoints(pred_nf, n=1000, ext=extent_of_mexico_map, extf = 1.25)
colnames(backg) = c('lon', 'lat')
group <- kfold(backg, 5)
backg_train <- backg[group != 1, ]
backg_test <- backg[group == 1, ]
jar <- paste(system.file(package="dismo"), "/java/maxent.jar", sep='')
xm <- maxent(predictors_cropped_to_mexico, pres_train_your_species, factors='biome')
plot(xm)
runApp('Server/Species')
View(your_species_data)
runApp('Server/Species')
View(predictors)
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
View(your_species_data)
runApp()
runApp('Server/Species')
runApp('Server/Species')
runApp('Server/Species')
View(your_species_data)
runApp('Server/Species')
runApp('Server/Species')
View(predictors)
runApp('Server/Species')
